/*
 * Copyright (c) 2015 Andrey “Limych” Khrolenok
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

// get variables && prevent crashing if missing
String safeGet(String name, String defaultValue = '') {
    hasProperty(name) ? project[name] : defaultValue
}

File safeGetFile(String name) {
    String fileName = safeGet(name, null)
    fileName != null ? file(fileName) : null
}

// loads variables from a file to `project` so they can be `safeGet`-ed later
def safeLoad(String name, Object value, Boolean override = false) {
    if (!hasProperty(name) || override)
        project.set name, value
}

Integer getBuildVersion(defaultVersion, Boolean increment = false) {
    File verFile = file('../version.properties')

    if (!verFile.canRead())
        verFile.createNewFile()

    Properties props = new Properties()

    props.load new FileInputStream(verFile)
    String currentCodeVersion = props['VERSION_CODE']

    if (currentCodeVersion == null)
        currentCodeVersion = defaultVersion ?: android.defaultConfig.versionCode

    if (increment) {
        Integer bumpedCodeVersion = currentCodeVersion.toInteger() + 1
//        android.defaultConfig.versionCode = bumpedCodeVersion

        props['VERSION_CODE'] = bumpedCodeVersion.toString()

        props.store verFile.newWriter(), "Build version updated with each release build"
        currentCodeVersion = bumpedCodeVersion
    }

    currentCodeVersion as Integer
}
